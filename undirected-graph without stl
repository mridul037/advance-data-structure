#include <iostream>
using namespace std;

//--------------CRAETE NODE STRUCTURE----------------//

struct adjNode{
	int dest;
	struct adjNode* next;
};

//-------------HEAD POINTER----------------//

struct  adjList{
	struct adjNode* head;
};

//-------------CREATE NODE-------------//////

struct adjNode* createNode(int x){
	struct adjNode* temp=(	struct adjNode* )malloc(sizeof(	struct adjNode));
	temp->dest=x;
	temp->next=NULL;
	return temp;
	};

//------------CREATE GRAPH STUCT-----------------//	

struct Graph{
	int V;
struct	adjList* array;
};

///////--------------CREATE GRAPH--------------------------------// 

struct Graph* createGraph(int x){
	struct Graph* t=(struct Graph*)malloc(sizeof(struct Graph));
	t->V=x;
	t->array=(adjList*)malloc(x*sizeof(adjList));
	for(int i=0;i<t->V;i++)
	{
		t->array[i].head=NULL;
	}
	return t;
};

//----------ADD EDGES ----------------------------//
void addedge(struct Graph* g,int src,int dest){
	struct adjNode* temp=createNode(dest);
	temp->next=g->array[src].head;
	g->array[src].head=temp;
	temp=createNode(src);
	temp->next=g->array[dest].head;
	g->array[dest].head=temp;
}
//--------PRINT GRAPH------------------//

void print(struct Graph* g){
	for(int v=0;v<g->V;v++){
	struct adjNode* temp=g->array[v].head;
	cout<<v<<"-->[";
	while(temp){
		cout<<temp->dest<<" ";
		temp=temp->next;
	}
	cout<<"]"<<endl;}
}
//-------------MAIN CALL--------------------//
int main() {
	int V = 5; 
    struct Graph* graph = createGraph(V); 
    addedge(graph, 0, 1); 
    addedge(graph, 0, 4); 
    addedge(graph, 1, 2); 
    addedge(graph, 1, 3); 
    addedge(graph, 1, 4); 
    addedge(graph, 2, 3); 
    addedge(graph, 3, 4); 
     print(graph); 
  return 0; }
