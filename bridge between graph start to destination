#include<bits/stdc++.h>
using namespace std;
class Graph{
    public:
    list<int> *adj;
    int V;
    Graph(int v){
        V=v;
        adj=new list<int>[V+1];
    }
   void addedge(int a,int b){
    adj[a].push_back(b);
    adj[b].push_back(a);
   }
   int   bfs(int s){
      bool *vis=new bool[V+1]{0};
       int level[V+1];
    level[s]=0;
      queue<int>q;
      q.push(s);
      vis[s]=1;
      while(!q.empty()){
          int f=q.front();
           q.pop();
          for(auto i:adj[f]){
             if(!vis[i]) 
              {vis[i]=1;
             level[i]=level[f]+1;
              q.push(i);}
        }
      
          
      }
      return level[V];
  }
    
    
};
int  main()
{
    int t;
    cin>>t;
    while(t--){int n,m;
    cin>>n>>m;
        Graph g(n);
        for(int i=0;i<m;i++){
            int a,b;cin>>a>>b;
            g.addedge(a,b);
        }
       cout<<g.bfs(1)<<endl;
    }
 }
